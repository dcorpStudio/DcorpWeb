//== this file use for DBOM Official form checking

//-- this function is just for JS to B compatible with ASP castNull, indeed, it's useless.
function castNull(x){ x=String(x); return (x!='undefined')?x:'' };



/*--- SPECIAL NOTE : HOW TO INTERGRATE A DBOM OFICIAL FORM

		<div rel="form_action" name="tblName" class="DBOMForm">
			<p class="failed_msg"> Error Messgae to display </p>
			<p class="success_msg"> Success Mesgae to díplay </p>

			<i class="formErr"></i> Intro text 1 :
				<input name="my_user" rel="{notNull:'Error message in case user leave field empty' ,regex:'Eror mesage in case structure error'}">

			<i class="formErr"></i> Intro text 2 :
				<input name="my_pass" type="password" rel="{notNull:'Err msg when user leave empty field'}">

			<input name="my_email"> Email Error : <i class="formErr" rel="my_email"></i>

			<a href="#x" class="block_but reset"> Xóa hết </a>
			<a href="#x" class="block_but submit"> Đăng ký </a>
			<input type="submit" class="invisible_submit" value="">
		</div>


		while : "rel"=error message object in text format (to be eval). to overwrite the error-msg that were auto-generated by default.
		<i> element : errMessage-container. All of them must have class "formErr" & have rel="input_name",,, or stand right before the related input
---*/




// DBOM Error Handle function
function DBOMForm_E(fieldName, err){
	var TBL = $.DBOMTbl_Checking; var F=$('.DBOMForm[name="'+ TBL.tblName +'"]:first');
	var x = $('[name="'+fieldName+'"]:first',F); var A=TBL[fieldName];
	var e=x.attr('rel') || ''; var errMsg=''; var errObj=false; if (e.indexOf('{')==0){ eval('errObj='+e) }else{ errMsg=e }

	//-- generate error messgae from error type (among 8 of : notNull, minLen, maxLen, castFunc, regex, minVal, maxVal,) & field's friendlyName
	var name = A.friendlyName;
	if (!errMsg && errObj){ errMsg=errObj[err] }
	if (!errMsg){switch (err){
		case 'notNull': 	errMsg= "Vui lòng điền "+ name.toLowerCase(); break;
		case 'minLen': 		errMsg= Capital(name)+ " tối thiểu "+ A.minLen +" ký tự"; break;
		case 'maxLen': 		errMsg= Capital(name)+ " không quá "+ A.maxLen +" ký tự"; break;
		case 'castFunc': 	errMsg= Capital(name)+ " không hợp lệ"; break;
		case 'regex': 		errMsg= Capital(name)+ " không hợp lệ"; break;
		case 'minVal': 		errMsg= Capital(name)+ " tối thiểu là "+ A.minVal; break;
		case 'maxVal': 		errMsg= Capital(name)+ " không quá "+ A.maxVal; break;
	}}

	$.DBOMTbl_Checking_Valid = false; x.RaiseErr(errMsg);
}




// DBOMForm check func
function DBOMForm_Check(tblName){
	tblName=tblName.toLowerCase(); var TBL = DBOM_TBL[tblName];	$.DBOMTbl_Checking = TBL; TBL.tblName = tblName
	var Form = $('.DBOMForm[name="'+tblName+'"]:first'); Form.hideErr(); $.DBOMTbl_Checking_Valid = true;
	for (var fieldName in TBL){if (!''[fieldName] && fieldName!='_'){
		var F = TBL[fieldName]; var x = F.Data = castNull($('[name="'+fieldName+'"]:first',Form).val());
		if (x==''){if (F.notNull){DBOMForm_E(fieldName,'notNull'); continue }else{ continue }} //notnull check
		if (x.length<F.minLen){DBOMForm_E(fieldName,'minLen'); continue } // check max-min length
		if (x.length>F.maxLen){DBOMForm_E(fieldName,'maxLen'); continue } // check max-min length
		if (F.castFunc && isNaN(F.castFunc(x))){DBOMForm_E(fieldName,'castFunc'); continue }; // castFunc
		if (F.sep){
			var isMatrix = F.sep.isArr();
			var DArr = x.split(isMatrix?F.sep[0]:F.sep); if (DArr.l()<minVal){DBOMForm_E(fieldName,'minVal')}; if (DArr.l()>maxVal){DBOMForm_E(fieldName,'maxVal'); continue }; 
			for (var i=0;i<DArr.l();i++){if (F.regex){
				if (isMatrix){	//-- 2 dimensions array datatype
					DArr[i]=DArr[i].split(F.sep[1]); if (DArr[i]!=F.regex.l()){DBOMForm_E(fieldName,'Matrix colNum'); continue }	//-- assuming that regex must be an array
					for (var j=0;j<DArr[i].l();j++){ if (!F.regex[j].test(DArr[i][j])){DBOMForm_E(fieldName,'regex'); continue } }
				}else{	//-- 1 dimension array datatype
					if (!F.regex.test(DArr[i])){DBOMForm_E(fieldName,'regex'); continue }
				}
			}}
		}else if(F.regex && !F.regex.test(x)){ DBOMForm_E(fieldName,'regex'); continue  }
		else if(F.minVal && x<F.minVal){ DBOMForm_E(fieldName,'minVal'); continue  }
		else if(F.maxVal && x>F.maxVal){ DBOMForm_E(fieldName,'maxVal'); continue  }
	}}
	return $.DBOMTbl_Checking_Valid;
}


//--- deal with DBOM Form
$('.DBOMForm').live('XSubmit',function(e,callBackFunc,B4Func){ e.stopPropagation();
	var F=$(this); F.hideErr(); DBOMForm_Check(F.attr('name')); (B4Func||F.data('B4Func')||parseInt)();
	if (F.formReady()){
		/***/ F.Processing_Mask();
		callBackFunc = callBackFunc || F.data('callBackFunc') || function(x){JForm_Handle_Result(F,x); F.Processing_Done(); }
		$.post( F.attr('alt'), F.find('input,select,textarea').serialize(), callBackFunc )
	}
})







