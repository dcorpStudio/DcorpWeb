[1,["ecpdLyjvZBwrvm+cedCcQy","d1r94RSW9ODpW2UBbZ6nZ9","a2MjXRFdtLlYQ5ouAFv/+R","d1flBAdOpI553UUHfLi/ob","25gtxYnbdHtKUx9K8AsHXD","a1/MJZCXhAGqa+gPY5wJ7e","82YVJAoCBPEr630jfgND7a","3fUFGQhHFI1o+MfEAFYYU9","88oazlOupLfZCaD1NdzsFq","30v/pCDkBCSZ1+l07K9TBr","423VwrwHFFPqmUsuM4fhip","35d4cIt/lPVph21P8xvPWZ","7eeo2mnRlDXbkkr3VFW1Qr","04jt+JOOVHJLWGMwmZDecm","ca43E8f3VI35znOuyw9Nex","51nMKXwZNOnbNI8UkoUhrW","bfuDjUrOhJ3raB8QfEUMkh","92UvnJMcZEEZrdfkbR7rBk","6cPv5E/5dD3peraCwqeBZy","c1+Tz8In5OnKMRkblPM0TL","777X266ClPgbqJhQKNKrVA","09R42whEtI07/Oqkh4TLqe","0c96WGFpRPkJDuYq9Zyyxc","68hSB80QtG057bpCMgvKQi","fb+xetuZBL1JxDLq0gM/73","aftvQD+XBJNZvhRCA4ute4","02delMVqdBD70a/HSD99FK","e2Vu7nQnJK+rOdyD1lAhmZ","7fmqvFRtNBkKZnKirZsS9s","e2gabMX75Kt5319u84N8hU","10ATsqr/ZPqLVADrwfvPf9","4d3ga5AoVCOKqEMJRHO1V/","a1qIhBucdOErVoey2HyfJT","72FPLcg6hFb5ULOdJ4KNtC","d77RwiToFKN5B8JsOZrH4M","6eQcWtwn1OCL8/P5HqkMa1","3fDc5OxJJLVrLeBRZNxclT","3eXtwa5XdGlpsvjrodZ2Es","d0iXDI51lEVZnycsNIda55","f08mBA8mVCpKrcKB33bt5K","76JADiH+VERZC98QpxgPB+"],["node","_spriteFrame","_parent","_N$file","_effectAsset","_textureSetter","scene","futuraBoldFont","futuraMedFont"],[["cc.Node",["_name","_active","_opacity","_objFlags","_parent","_components","_contentSize","_trs","_children","_color","_anchorPoint"],-1,1,9,5,7,2,5,5],["cc.Widget",["_alignFlags","_top","_originalWidth","_originalHeight","_left","_right","_bottom","alignMode","node","_target"],-5,1,1],["cc.Sprite",["_sizeMode","_isTrimmedMode","_enabled","node","_materials","_spriteFrame"],0,1,3,6],["cc.Label",["_fontSize","_N$horizontalAlign","_N$verticalAlign","_lineHeight","_isSystemFontUsed","_string","_N$overflow","node","_materials","_N$file"],-4,1,3,6],["cc.Layout",["_resize","_N$layoutType","_N$spacingY","node","_layoutSize"],0,1,5],["cc.Camera",["_cullingMask","_depth","node","_backgroundColor"],1,1,5],"cc.SpriteFrame",["cc.Material",["_name","_techniqueData"],1],["cc.TTFFont",["_name","_native"],1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Node",["_name","_id","_children","_components","_contentSize","_trs"],1,12,9,5,7],["cc.Canvas",["node","_designResolution"],3,1,5],["627802AmqJKc6KbJDmiTk8k",["node","futuraBoldFont","futuraMedFont"],3,1,6,6],["cc.BoxCollider",["node","_offset"],3,1,5],["bd13a1nRSxO9oG48AZjd269",["node"],3,1],["cc.BlockInputEvents",["node"],3,1],["daff6JBCl9PXo0HpdCEujAL",["node"],3,1],["cc.LabelOutline",["_width","node","_color"],2,1,5],["cc.Scene",["_name","_active","_children","_anchorPoint","_trs"],1,2,5,7]],[[2,3,4,5,1],[0,0,4,5,6,7,2],[0,0,4,5,6,10,7,2],[2,0,3,4,5,2],[0,0,4,5,6,2],[16,0,1],[0,0,4,8,5,9,6,7,2],[2,0,1,3,4,5,3],[3,5,0,3,4,1,2,7,8,9,7],[7,0,1,3],[8,0,1,3],[9,0,1,2,4],[0,0,8,7,2],[0,0,1,4,8,5,9,6,10,7,3],[0,0,2,5,9,6,3],[0,0,1,4,8,5,9,6,7,3],[0,0,3,4,5,7,3],[0,0,4,8,2],[4,0,1,2,3,4,4],[1,0,2,3,8,4],[1,0,4,1,8,4],[3,5,0,4,1,2,7,8,9,6],[10,0,1,3],[0,0,8,5,6,7,2],[0,0,3,4,3],[0,0,4,8,5,6,2],[0,0,8,5,9,6,10,2],[0,0,1,4,8,5,9,10,7,3],[0,0,1,4,8,5,6,3],[0,0,4,8,6,7,2],[0,0,2,4,5,9,6,3],[0,0,4,5,6,10,2],[0,0,2,4,5,9,6,7,3],[0,0,4,5,10,2],[0,0,1,4,5,6,3],[0,0,3,1,2,4,5,6,5],[0,0,4,5,9,6,2],[0,0,4,5,9,6,7,2],[0,0,4,8,7,2],[11,0,1,2,3,4,5,3],[4,0,1,3,4,3],[12,0,1,1],[13,0,1,2,1],[1,0,8,2],[1,0,4,5,1,8,5],[1,0,1,8,9,3],[1,0,5,1,8,4],[1,0,1,6,2,3,8,6],[1,7,0,8,3],[2,2,0,3,4,5,3],[2,0,1,3,4,3],[14,0,1,1],[15,0,1],[17,0,1],[3,5,0,3,1,2,7,8,6],[3,0,3,4,1,2,6,7,8,9,7],[3,0,3,4,1,2,7,8,9,6],[18,0,1,2,2],[19,0,1,2,3,4,3],[5,0,1,2,3,3],[5,2,3,1]],[[[[9,"alpha_mask",{"0":{"defines":{"USE_TEXTURE":true},"props":{}}}]],0,0,[0],[4],[25]],[[[10,"FUTURABOLD","FUTURABOLD.ttf"],-1],0,0,[],[],[]],[[{"name":"default_sprite_splash","rect":[0,0,2,2],"offset":[0,0],"originalSize":[2,2],"capInsets":[0,0,0,0]}],[6],0,[0],[5],[26]],[[[11,"alpha_mask",[{"hash":1385010308,"record":null,"name":"alpha_mask|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform sampler2D texture_bg;\nuniform sampler2D texture_mask;\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 bg_color = texture2D(texture_bg, v_uv0);\n  vec2 maskPixCoordinate = vec2(v_uv0.x, v_uv0.y);\n  vec4 mask_color = texture2D(texture_mask, maskPixCoordinate);\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  if(mask_color.a > 0.9 && mask_color.r > 0.01 ){\n    float colorRatio = (mask_color.r + mask_color.g + mask_color.b) / 1.0;\n    o = o * 0.9 + o * 0.1 * colorRatio;\n  }\n  o.a = o.a * mask_color.a;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform sampler2D texture_bg;\nuniform sampler2D texture_mask;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 bg_color = texture2D(texture_bg, v_uv0);\n  vec2 maskPixCoordinate = vec2(v_uv0.x, v_uv0.y);\n  vec4 mask_color = texture2D(texture_mask, maskPixCoordinate);\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  if(mask_color.a > 0.9 && mask_color.r > 0.01 ){\n    float colorRatio = (mask_color.r + mask_color.g + mask_color.b) / 1.0;\n    o = o * 0.9 + o * 0.1 * colorRatio;\n  }\n  o.a = o.a * mask_color.a;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]},{"name":"USE_BGRA","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture_bg","type":29,"count":1,"binding":30,"defines":[]},{"name":"texture_mask","type":29,"count":1,"binding":31,"defines":[]},{"name":"texture","type":29,"count":1,"binding":32,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"alpha_mask|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"texture_bg":{"value":"white","type":29},"texture_mask":{"value":"white","type":29}}}]}]]],0,0,[],[],[]],[[[10,"FUTURAMEDIUM","FUTURAMEDIUM.ttf"],-1],0,0,[],[],[]],[[[9,"shadow",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[4],[27]],[[[11,"shadow",[{"hash":1361782762,"record":null,"name":"shadow|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D main_texture;\n#endif\nvoid main () {\n  vec4 texColor = texture2D(texture, v_uv0.xy);\n  float distance = 1.0 / 640.0;\n  vec4 finalColor = 0.1 * texColor;\n  for(float i=1.0; i<5.0; i++){\n    for(float j=1.0; j<5.0; j++){\n      float distanceRatio = 0.7 / (i+j) / (i+j) / (i+j);\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x - distance * i, v_uv0.y - distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x + distance * i, v_uv0.y + distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x + distance * i, v_uv0.y - distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x - distance * i, v_uv0.y + distance * j ));\n    }\n  }\n  finalColor.r = 0.0;\n  finalColor.g = 0.0;\n  finalColor.b = 0.0;\n  finalColor.a *= 0.7;\n  gl_FragColor = finalColor;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D main_texture;\n#endif\nvoid main () {\n  vec4 texColor = texture2D(texture, v_uv0.xy);\n  float distance = 1.0 / 640.0;\n  vec4 finalColor = 0.1 * texColor;\n  for(float i=1.0; i<5.0; i++){\n    for(float j=1.0; j<5.0; j++){\n      float distanceRatio = 0.7 / (i+j) / (i+j) / (i+j);\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x - distance * i, v_uv0.y - distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x + distance * i, v_uv0.y + distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x + distance * i, v_uv0.y - distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x - distance * i, v_uv0.y + distance * j ));\n    }\n  }\n  finalColor.r = 0.0;\n  finalColor.g = 0.0;\n  finalColor.b = 0.0;\n  finalColor.a *= 0.7;\n  gl_FragColor = finalColor;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]},{"name":"main_texture","type":29,"count":1,"binding":31,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"shadow|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"main_texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[[22,"home",{}],[12,"mask_tiles",[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19],[-2000,-200,0,0,0,0,1,1,1,1]],[12,"mask_tile_shadows",[-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38],[-4201.162,583.929,0,0,0,0,1,1,1,1]],[23,"input_pictures",[-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52],[[40,1,1,-39,[5,13000,200]]],[5,13000,200],[-1471.174,323.116,0,0,0,0,1,0.4,0.4,1]],[39,"Canvas","d4r7TWR6dCPLLSlqEIQM8w",[[-56,-57,-58,-59,-60,[24,"fx_container",512,-61],-62,-63,-64],1,1,1,1,1,4,1,1,1],[[41,-53,[5,1920,1080]],[42,-54,152,153],[43,45,-55]],[5,1920,1080],[960,540,0,0,0,0,1,1,1,1]],[25,"play_area",4,[-66,-67,-68,-69,-70],[[19,45,100,100,-65]],[5,1920,1080]],[26,"tile_cell",[-74,-75],[[49,false,0,-71,[46],47],[51,-72,[0,50,50]],[52,-73]],[4,4289967083],[5,100,100],[0,0,0]],[6,"btn_full_picture",5,[-78,-79],[[3,0,-76,[14],15],[44,9,482.07500000000005,1277.925,4.291999999999973,-77]],[4,4280194067],[5,160,60],[-397.92499999999995,505.7080000000001,0,0,0,0,1,1,1,1]],[27,"drop_list_container",false,7,[-82,-83],[[3,0,-80,[12],13],[45,17,83.02499999999992,-81,4]],[4,4291940817],[0,0.5,1],[397.92499999999995,-48.733000000000004,0,0,0,0,1,1,1,1]],[6,"btn_select_picture",5,[-86,-87],[[3,0,-84,[26],27],[20,9,4.6580000000000155,4.291999999999916,-85]],[4,4280194067],[5,300,60],[-805.342,505.7080000000001,0,0,0,0,1,1,1,1]],[13,"drop_list_container",false,9,[-90,-91],[[3,0,-88,[24],25],[18,1,2,2,-89,[5,160,0]]],[4,4291940817],[5,300,0],[0,0.5,1],[0,-35.513,0,0,0,0,1,1,1,1]],[6,"btn_select_map_size",5,[-94,-95],[[3,0,-92,[38],39],[20,9,313.00800000000004,4.291999999999973,-93]],[4,4280194067],[5,160,60],[-566.992,505.7080000000001,0,0,0,0,1,1,1,1]],[13,"drop_list_container",false,11,[-98,-99],[[3,0,-96,[36],37],[18,1,2,2,-97,[5,160,0]]],[4,4291940817],[5,160,0],[0,0.5,1],[0,-36.695,0,0,0,0,1,1,1,1]],[6,"btn_replay",5,[-102],[[3,0,-100,[4],5],[46,33,4.7450000000000045,4.291999999999916,-101]],[4,4280194067],[5,160,60],[875.255,505.7080000000001,0,0,0,0,1,1,1,1]],[28,"layer_win",false,4,[-104,-105],[[19,45,100,100,-103]],[5,1920,1080]],[29,"sprite_frames_store",4,[3,1,2],[5,4000,400],[100.072,1511.073,0,0,0,0,1,0.3,0.3,1]],[30,"bg_block_input",55,8,[[7,0,false,-106,[8],9],[5,-107]],[4,4278190080],[5,8000,4000]],[31,"photo",8,[[0,-108,[10],11],[5,-109]],[5,1000,667],[0,0.5,1]],[14,"bg_block_input",55,[[7,0,false,-110,[18],19],[5,-111]],[4,4278190080],[5,8000,4000]],[15,"sample_row",false,10,[-113],[[3,0,-112,[22],23]],[4,4282104618],[5,300,60],[0,-32,0,0,0,0,1,1,1,1]],[14,"bg_block_input",55,[[7,0,false,-114,[30],31],[5,-115]],[4,4278190080],[5,8000,4000]],[15,"sample_row",false,12,[-117],[[3,0,-116,[34],35]],[4,4282104618],[5,160,60],[0,-32,0,0,0,0,1,1,1,1]],[32,"bg",179,14,[[3,0,-118,[40],41],[47,44,951,-1.5,100,100,-119]],[4,4278190080],[5,1920,209],[0,-437,0,0,0,0,1,1,1,1]],[33,"tile_graphic",6,[[50,2,false,-120,[44]],[53,-121]],[0,0,0]],[34,"debug_node",false,6,[[54,"2-3",20,20,1,1,-122,[45]],[57,2,-123,[4,4278190335]]],[5,32.91,29.2]],[35,"nag_screen",512,false,0,4,[[3,0,-124,[150],151],[5,-125]],[5,1080,2500]],[58,"New Node",false,[4],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[16,"camera1",512,4,[[59,1,-10,-126,[4,4292715821]]],[0,0,355.0704155516199,0,0,0,1,1,1,1]],[16,"Main Camera",512,4,[[60,-127,[4,4292715821]]],[0,0,355.0704155516199,0,0,0,1,1,1,1]],[36,"bg",4,[[3,0,-128,[0],1]],[4,4288453788],[5,20000,4000]],[2,"grid",5,[[48,2,18,-129]],[5,1000,667],[0,0,0],[-500,-333.5,0,0,0,0,1,1,1,1]],[4,"New Label",13,[[21,"Replay",30,false,1,1,-130,[2],3]],[5,89.88,50.4]],[4,"New Label",7,[[21,"preview",30,false,1,1,-131,[6],7]],[5,106.41,50.4]],[1,"label_current_picture",9,[[55,30,30,false,1,1,2,-132,[16],17]],[5,270,50.4],[0,4,0,0,0,0,1,1,1,1]],[17,"bg",10,[18]],[4,"label",19,[[8,"6x4",30,30,false,1,1,-133,[20],21]],[5,66.45,50.4]],[4,"label_current_size",11,[[56,30,30,false,1,1,-134,[28],29]],[5,0,37.8]],[17,"bg",12,[20]],[4,"label",21,[[8,"6x4",30,30,false,1,1,-135,[32],33]],[5,66.45,50.4]],[37,"New Label",14,[[8,"Congratulation!\nPuzzle solved!",50,50,false,1,1,-136,[42],43]],[4,4281663299],[5,395.53,113],[0,-427.981,0,0,0,0,1,1,1,1]],[38,"sample_nodes",4,[6],[447.91,1468.992,0,0,0,0,1,1,1,1]],[1,"photo (1)",3,[[0,-137,[48],49]],[5,1000,667],[-6000,0,0,0,0,0,1,1,1,1]],[1,"photo (2)",3,[[0,-138,[50],51]],[5,1000,667],[-5000,0,0,0,0,0,1,1,1,1]],[1,"photo (3)",3,[[0,-139,[52],53]],[5,1000,665],[-4000,0,0,0,0,0,1,1,1,1]],[1,"photo (4)",3,[[0,-140,[54],55]],[5,1000,664],[-3000,0,0,0,0,0,1,1,1,1]],[1,"photo (5)",3,[[0,-141,[56],57]],[5,1000,667],[-2000,0,0,0,0,0,1,1,1,1]],[1,"photo (6)",3,[[0,-142,[58],59]],[5,1000,638],[-1000,0,0,0,0,0,1,1,1,1]],[4,"photo (7)",3,[[0,-143,[60],61]],[5,1000,667]],[1,"photo (8)",3,[[0,-144,[62],63]],[5,1000,662],[1000,0,0,0,0,0,1,1,1,1]],[1,"photo (9)",3,[[0,-145,[64],65]],[5,1000,723],[2000,0,0,0,0,0,1,1,1,1]],[1,"photo (10)",3,[[0,-146,[66],67]],[5,1000,667],[3000,0,0,0,0,0,1,1,1,1]],[1,"photo (11)",3,[[0,-147,[68],69]],[5,1000,667],[4000,0,0,0,0,0,1,1,1,1]],[1,"photo (12)",3,[[0,-148,[70],71]],[5,1000,616],[5000,0,0,0,0,0,1,1,1,1]],[1,"photo (13)",3,[[0,-149,[72],73]],[5,1000,664],[6000,0,0,0,0,0,1,1,1,1]],[1,"square-tile",1,[[0,-150,[74],75]],[5,340,340],[-4205,-30,0,0,0,0,1,1,1,1]],[1,"flat-square-tile",1,[[0,-151,[76],77]],[5,340,340],[-2000,-200,0,0,0,0,1,1,1,1]],[1,"tile-border-top1",1,[[0,-152,[78],79]],[5,360,360],[-3866,-30,0,0,0,0,1,1,1,1]],[1,"tile-border-top2",1,[[0,-153,[80],81]],[5,360,360],[-3527,-30,0,0,0,0,1,1,1,1]],[1,"tile-border-left1",1,[[0,-154,[82],83]],[5,360,360],[-3187,-29,0,0,0,0,1,1,1,1]],[1,"tile-border-left2",1,[[0,-155,[84],85]],[5,360,360],[-2847,-29.5,0,0,0,0,1,1,1,1]],[1,"tile-border-right1",1,[[0,-156,[86],87]],[5,360,360],[-2507,-30,0,0,0,0,1,1,1,1]],[1,"tile-border-right2",1,[[0,-157,[88],89]],[5,360,360],[-2168,-27.5,0,0,0,0,1,1,1,1]],[1,"tile-border-bottom1",1,[[0,-158,[90],91]],[5,360,360],[-1850,-28.5,0,0,0,0,1,1,1,1]],[1,"tile-border-bottom2",1,[[0,-159,[92],93]],[5,360,360],[-1532.5,-29,0,0,0,0,1,1,1,1]],[1,"tile-corner-top-left",1,[[0,-160,[94],95]],[5,360,360],[-1194,-30,0,0,0,0,1,1,1,1]],[1,"tile-corner-top-right-odd",1,[[0,-161,[96],97]],[5,360,360],[-854,-27,0,0,0,0,1,1,1,1]],[1,"tile-corner-top-right-even",1,[[0,-162,[98],99]],[5,360,360],[-4205,-370,0,0,0,0,1,1,1,1]],[1,"tile-corner-bottom-left-odd",1,[[0,-163,[100],101]],[5,360,360],[-3865,-370,0,0,0,0,1,1,1,1]],[1,"tile-corner-bottom-left-even",1,[[0,-164,[102],103]],[5,360,360],[-3525,-368.5,0,0,0,0,1,1,1,1]],[1,"tile-corner-bottom-right-odd",1,[[0,-165,[104],105]],[5,360,360],[-3185,-370,0,0,0,0,1,1,1,1]],[1,"tile-corner-bottom-right-even",1,[[0,-166,[106],107]],[5,360,360],[-2845,-370,0,0,0,0,1,1,1,1]],[1,"tile-inner1",1,[[0,-167,[108],109]],[5,360,360],[-2505,-367.5,0,0,0,0,1,1,1,1]],[1,"tile-inner2",1,[[0,-168,[110],111]],[5,360,360],[-2167.5,-341,0,0,0,0,1,1,1,1]],[2,"square-tile",2,[[0,-169,[112],113]],[5,340,340],[0,0,0],[-4205,-30,0,0,0,0,1,1,1,1]],[2,"flat-square-tile",2,[[0,-170,[114],115]],[5,340,340],[0,0,0],[-2000,-200,0,0,0,0,1,1,1,1]],[2,"tile-border-top1",2,[[0,-171,[116],117]],[5,360,360],[0,0,0],[-3866,-30,0,0,0,0,1,1,1,1]],[2,"tile-border-top2",2,[[0,-172,[118],119]],[5,360,360],[0,0,0],[-3527,-30,0,0,0,0,1,1,1,1]],[2,"tile-border-left1",2,[[0,-173,[120],121]],[5,360,360],[0,0,0],[-3187,-29,0,0,0,0,1,1,1,1]],[2,"tile-border-left2",2,[[0,-174,[122],123]],[5,360,360],[0,0,0],[-2847,-29.5,0,0,0,0,1,1,1,1]],[2,"tile-border-right1",2,[[0,-175,[124],125]],[5,360,360],[0,0,0],[-2507,-30,0,0,0,0,1,1,1,1]],[2,"tile-border-right2",2,[[0,-176,[126],127]],[5,360,360],[0,0,0],[-2168,-27.5,0,0,0,0,1,1,1,1]],[2,"tile-border-bottom1",2,[[0,-177,[128],129]],[5,360,360],[0,0,0],[-1850,-28.5,0,0,0,0,1,1,1,1]],[2,"tile-border-bottom2",2,[[0,-178,[130],131]],[5,360,360],[0,0,0],[-1532.5,-29,0,0,0,0,1,1,1,1]],[2,"tile-corner-top-left",2,[[0,-179,[132],133]],[5,360,360],[0,0,0],[-1194,-30,0,0,0,0,1,1,1,1]],[2,"tile-corner-top-right-odd",2,[[0,-180,[134],135]],[5,360,360],[0,0,0],[-854,-27,0,0,0,0,1,1,1,1]],[2,"tile-corner-top-right-even",2,[[0,-181,[136],137]],[5,360,360],[0,0,0],[-4205,-370,0,0,0,0,1,1,1,1]],[2,"tile-corner-bottom-left-odd",2,[[0,-182,[138],139]],[5,360,360],[0,0,0],[-3865,-370,0,0,0,0,1,1,1,1]],[2,"tile-corner-bottom-left-even",2,[[0,-183,[140],141]],[5,360,360],[0,0,0],[-3525,-368.5,0,0,0,0,1,1,1,1]],[2,"tile-corner-bottom-right-odd",2,[[0,-184,[142],143]],[5,360,360],[0,0,0],[-3185,-370,0,0,0,0,1,1,1,1]],[2,"tile-corner-bottom-right-even",2,[[0,-185,[144],145]],[5,360,360],[0,0,0],[-2845,-370,0,0,0,0,1,1,1,1]],[2,"tile-inner1",2,[[0,-186,[146],147]],[5,360,360],[0,0,0],[-2505,-367.5,0,0,0,0,1,1,1,1]],[2,"tile-inner2",2,[[0,-187,[148],149]],[5,360,360],[0,0,0],[-2167.5,-341,0,0,0,0,1,1,1,1]]],0,[0,-1,54,0,-2,55,0,-3,56,0,-4,57,0,-5,58,0,-6,59,0,-7,60,0,-8,61,0,-9,62,0,-10,63,0,-11,64,0,-12,65,0,-13,66,0,-14,67,0,-15,68,0,-16,69,0,-17,70,0,-18,71,0,-19,72,0,-1,73,0,-2,74,0,-3,75,0,-4,76,0,-5,77,0,-6,78,0,-7,79,0,-8,80,0,-9,81,0,-10,82,0,-11,83,0,-12,84,0,-13,85,0,-14,86,0,-15,87,0,-16,88,0,-17,89,0,-18,90,0,-19,91,0,0,3,0,-1,41,0,-2,42,0,-3,43,0,-4,44,0,-5,45,0,-6,46,0,-7,47,0,-8,48,0,-9,49,0,-10,50,0,-11,51,0,-12,52,0,-13,53,0,0,4,0,0,4,0,0,4,0,-1,27,0,-2,28,0,-3,29,0,-4,5,0,-5,14,0,2,4,0,-7,40,0,-8,15,0,-9,25,0,0,5,0,-1,30,0,-2,13,0,-3,7,0,-4,9,0,-5,11,0,0,6,0,0,6,0,0,6,0,-1,23,0,-2,24,0,0,7,0,0,7,0,-1,32,0,-2,8,0,0,8,0,0,8,0,-1,16,0,-2,17,0,0,9,0,0,9,0,-1,33,0,-2,10,0,0,10,0,0,10,0,-1,34,0,-2,19,0,0,11,0,0,11,0,-1,36,0,-2,12,0,0,12,0,0,12,0,-1,37,0,-2,21,0,0,13,0,0,13,0,-1,31,0,0,14,0,-1,22,0,-2,39,0,0,16,0,0,16,0,0,17,0,0,17,0,0,18,0,0,18,0,0,19,0,-1,35,0,0,20,0,0,20,0,0,21,0,-1,38,0,0,22,0,0,22,0,0,23,0,0,23,0,0,24,0,0,24,0,0,25,0,0,25,0,0,27,0,0,28,0,0,29,0,0,30,0,0,31,0,0,32,0,0,33,0,0,35,0,0,36,0,0,38,0,0,39,0,0,41,0,0,42,0,0,43,0,0,44,0,0,45,0,0,46,0,0,47,0,0,48,0,0,49,0,0,50,0,0,51,0,0,52,0,0,53,0,0,54,0,0,55,0,0,56,0,0,57,0,0,58,0,0,59,0,0,60,0,0,61,0,0,62,0,0,63,0,0,64,0,0,65,0,0,66,0,0,67,0,0,68,0,0,69,0,0,70,0,0,71,0,0,72,0,0,73,0,0,74,0,0,75,0,0,76,0,0,77,0,0,78,0,0,79,0,0,80,0,0,81,0,0,82,0,0,83,0,0,84,0,0,85,0,0,86,0,0,87,0,0,88,0,0,89,0,0,90,0,0,91,0,6,26,1,2,15,2,2,15,3,2,15,4,2,26,6,2,40,18,2,34,20,2,37,187],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,1,-1,3,-1,1,-1,3,-1,1,-1,1,-1,1,-1,1,-1,3,-1,1,-1,3,-1,1,-1,1,-1,1,-1,3,-1,1,-1,3,-1,1,-1,1,-1,1,-1,1,-1,3,-1,-1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,7,8],[0,2,0,3,0,2,0,3,0,2,0,4,0,2,0,2,0,3,0,2,0,3,0,2,0,2,0,2,0,3,0,2,0,3,0,2,0,2,0,2,0,2,0,5,28,0,0,2,0,4,0,29,0,30,0,31,0,32,0,33,0,34,0,35,0,36,0,37,0,38,0,39,0,40,0,6,0,7,0,8,0,9,0,10,0,11,0,12,0,13,0,14,0,15,0,16,0,17,0,18,0,19,0,20,0,21,0,22,0,23,0,24,1,6,1,7,1,8,1,9,1,10,1,11,1,12,1,13,1,14,1,15,1,16,1,17,1,18,1,19,1,20,1,21,1,22,1,23,1,24,0,2,5,3]]]]