[1,["ecpdLyjvZBwrvm+cedCcQy","d1r94RSW9ODpW2UBbZ6nZ9","a2MjXRFdtLlYQ5ouAFv/+R","a1/MJZCXhAGqa+gPY5wJ7e","d1flBAdOpI553UUHfLi/ob","82YVJAoCBPEr630jfgND7a","3fUFGQhHFI1o+MfEAFYYU9","88oazlOupLfZCaD1NdzsFq","30v/pCDkBCSZ1+l07K9TBr","423VwrwHFFPqmUsuM4fhip","35d4cIt/lPVph21P8xvPWZ","7eeo2mnRlDXbkkr3VFW1Qr","04jt+JOOVHJLWGMwmZDecm","ca43E8f3VI35znOuyw9Nex","51nMKXwZNOnbNI8UkoUhrW","bfuDjUrOhJ3raB8QfEUMkh","92UvnJMcZEEZrdfkbR7rBk","6cPv5E/5dD3peraCwqeBZy","c1+Tz8In5OnKMRkblPM0TL","777X266ClPgbqJhQKNKrVA","09R42whEtI07/Oqkh4TLqe","0c96WGFpRPkJDuYq9Zyyxc","68hSB80QtG057bpCMgvKQi","fb+xetuZBL1JxDLq0gM/73","aftvQD+XBJNZvhRCA4ute4","02delMVqdBD70a/HSD99FK","e2Vu7nQnJK+rOdyD1lAhmZ","7fmqvFRtNBkKZnKirZsS9s","3cTONwvidMmpLRX+Q0CerI","e4pcv0wkNL2a7PLu2cx9kN","25gtxYnbdHtKUx9K8AsHXD","e2gabMX75Kt5319u84N8hU","10ATsqr/ZPqLVADrwfvPf9","4d3ga5AoVCOKqEMJRHO1V/","a1qIhBucdOErVoey2HyfJT","72FPLcg6hFb5ULOdJ4KNtC","d77RwiToFKN5B8JsOZrH4M","6eQcWtwn1OCL8/P5HqkMa1","3fDc5OxJJLVrLeBRZNxclT","3eXtwa5XdGlpsvjrodZ2Es","d0iXDI51lEVZnycsNIda55","f08mBA8mVCpKrcKB33bt5K","76JADiH+VERZC98QpxgPB+"],["node","_spriteFrame","_parent","_effectAsset","_N$file","_textureSetter","scene","futuraBoldFont","futuraMedFont"],[["cc.Node",["_name","_objFlags","_active","_opacity","_parent","_components","_contentSize","_trs","_children","_color","_anchorPoint"],-1,1,9,5,7,2,5,5],["cc.Sprite",["_sizeMode","_enabled","_isTrimmedMode","node","_materials","_spriteFrame"],0,1,3,6],["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","alignMode","node"],-1,1],["cc.Label",["_string","_N$horizontalAlign","_N$verticalAlign","_isSystemFontUsed","_fontSize","_lineHeight","node","_materials","_N$file"],-3,1,3,6],["cc.Camera",["_cullingMask","_depth","node","_backgroundColor"],1,1,5],"cc.SpriteFrame",["cc.Material",["_name","_techniqueData"],1],["cc.TTFFont",["_name","_native"],1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Node",["_name","_id","_children","_components","_contentSize","_trs"],1,12,9,5,7],["cc.Layout",["_resize","_N$layoutType","node","_layoutSize"],1,1,5],["cc.Canvas",["node","_designResolution"],3,1,5],["627802AmqJKc6KbJDmiTk8k",["node","futuraBoldFont","futuraMedFont"],3,1,6,6],["cc.BoxCollider",["node","_offset"],3,1,5],["bd13a1nRSxO9oG48AZjd269",["node"],3,1],["daff6JBCl9PXo0HpdCEujAL",["node"],3,1],["cc.LabelOutline",["_width","node","_color"],2,1,5],["cc.BlockInputEvents",["node"],3,1],["cc.Scene",["_name","_active","_children","_anchorPoint","_trs"],1,2,5,7]],[[1,3,4,5,1],[0,0,4,5,6,7,2],[0,0,4,5,6,10,7,2],[1,0,3,4,5,2],[6,0,1,3],[7,0,1,3],[8,0,1,2,4],[0,0,8,7,2],[0,0,1,4,5,7,3],[3,0,3,6,7,8,3],[9,0,1,3],[0,0,8,5,6,7,2],[0,0,1,4,3],[0,0,8,5,9,6,10,2],[0,0,4,8,5,6,2],[0,0,4,8,6,7,2],[0,0,4,8,5,6,7,2],[0,0,4,8,5,9,6,7,2],[0,0,4,5,10,2],[0,0,2,4,5,6,3],[0,0,1,2,3,4,5,6,5],[0,0,4,5,9,6,2],[0,0,4,5,6,2],[0,0,4,8,7,2],[10,0,1,2,3,4,5,3],[11,0,1,2,3,3],[12,0,1,1],[13,0,1,2,1],[2,0,4,2],[2,0,1,2,4,4],[2,3,0,4,3],[1,1,0,3,4,5,3],[1,0,2,3,4,3],[14,0,1,1],[15,0,1],[3,0,4,5,1,2,6,7,6],[3,0,1,2,6,7,4],[16,0,1],[17,0,1,2,2],[18,0,1],[19,0,1,2,3,4,3],[4,0,1,2,3,3],[4,2,3,1]],[[[[4,"alpha_mask",{"0":{"defines":{"USE_TEXTURE":true},"props":{}}}]],0,0,[0],[3],[24]],[[[5,"FUTURABOLD","FUTURABOLD.ttf"],-1],0,0,[],[],[]],[[{"name":"default_sprite_splash","rect":[0,0,2,2],"offset":[0,0],"originalSize":[2,2],"capInsets":[0,0,0,0]}],[5],0,[0],[5],[25]],[[[6,"alpha_mask",[{"hash":1385010308,"record":null,"name":"alpha_mask|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform sampler2D texture_bg;\nuniform sampler2D texture_mask;\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 bg_color = texture2D(texture_bg, v_uv0);\n  vec2 maskPixCoordinate = vec2(v_uv0.x, v_uv0.y);\n  vec4 mask_color = texture2D(texture_mask, maskPixCoordinate);\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  if(mask_color.a > 0.9 && mask_color.r > 0.01 ){\n    float colorRatio = (mask_color.r + mask_color.g + mask_color.b) / 1.0;\n    o = o * 0.9 + o * 0.1 * colorRatio;\n  }\n  o.a = o.a * mask_color.a;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform sampler2D texture_bg;\nuniform sampler2D texture_mask;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 bg_color = texture2D(texture_bg, v_uv0);\n  vec2 maskPixCoordinate = vec2(v_uv0.x, v_uv0.y);\n  vec4 mask_color = texture2D(texture_mask, maskPixCoordinate);\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  if(mask_color.a > 0.9 && mask_color.r > 0.01 ){\n    float colorRatio = (mask_color.r + mask_color.g + mask_color.b) / 1.0;\n    o = o * 0.9 + o * 0.1 * colorRatio;\n  }\n  o.a = o.a * mask_color.a;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]},{"name":"USE_BGRA","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture_bg","type":29,"count":1,"binding":30,"defines":[]},{"name":"texture_mask","type":29,"count":1,"binding":31,"defines":[]},{"name":"texture","type":29,"count":1,"binding":32,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"alpha_mask|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"texture_bg":{"value":"white","type":29},"texture_mask":{"value":"white","type":29}}}]}]]],0,0,[],[],[]],[[[5,"FUTURAMEDIUM","FUTURAMEDIUM.ttf"],-1],0,0,[],[],[]],[[[4,"shadow",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[3],[26]],[[[6,"shadow",[{"hash":1361782762,"record":null,"name":"shadow|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D main_texture;\n#endif\nvoid main () {\n  vec4 texColor = texture2D(texture, v_uv0.xy);\n  float distance = 1.0 / 640.0;\n  vec4 finalColor = 0.1 * texColor;\n  for(float i=1.0; i<5.0; i++){\n    for(float j=1.0; j<5.0; j++){\n      float distanceRatio = 0.7 / (i+j) / (i+j) / (i+j);\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x - distance * i, v_uv0.y - distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x + distance * i, v_uv0.y + distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x + distance * i, v_uv0.y - distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x - distance * i, v_uv0.y + distance * j ));\n    }\n  }\n  finalColor.r = 0.0;\n  finalColor.g = 0.0;\n  finalColor.b = 0.0;\n  finalColor.a *= 0.7;\n  gl_FragColor = finalColor;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D main_texture;\n#endif\nvoid main () {\n  vec4 texColor = texture2D(texture, v_uv0.xy);\n  float distance = 1.0 / 640.0;\n  vec4 finalColor = 0.1 * texColor;\n  for(float i=1.0; i<5.0; i++){\n    for(float j=1.0; j<5.0; j++){\n      float distanceRatio = 0.7 / (i+j) / (i+j) / (i+j);\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x - distance * i, v_uv0.y - distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x + distance * i, v_uv0.y + distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x + distance * i, v_uv0.y - distance * j ));\n      finalColor += distanceRatio * texture2D(texture, vec2(v_uv0.x - distance * i, v_uv0.y + distance * j ));\n    }\n  }\n  finalColor.r = 0.0;\n  finalColor.g = 0.0;\n  finalColor.b = 0.0;\n  finalColor.a *= 0.7;\n  gl_FragColor = finalColor;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]},{"name":"main_texture","type":29,"count":1,"binding":31,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"shadow|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"main_texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[[10,"home",{}],[7,"mask_tiles",[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19],[-2000,-200,0,0,0,0,1,1,1,1]],[7,"mask_tile_shadows",[-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38],[1817.418,-3762.823,0,0,0,0,1,1,1,1]],[11,"input_pictures",[-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54],[[25,1,1,-39,[5,14200,200]]],[5,14200,200],[-1471.174,323.116,0,0,0,0,1,0.4,0.4,1]],[24,"Canvas","d4r7TWR6dCPLLSlqEIQM8w",[[-58,-59,-60,-61,[12,"fx_container",512,-62],-63,-64,-65],1,1,1,1,4,1,1,1],[[26,-55,[5,1920,1080]],[27,-56,121,122],[28,45,-57]],[5,1920,1080],[960,540,0,0,0,0,1,1,1,1]],[13,"tile_cell",[-69,-70],[[31,false,0,-66,[11],12],[33,-67,[0,50,50]],[34,-68]],[4,4289967083],[5,100,100],[0,0,0]],[14,"play_area",4,[-72,-73,-74],[[29,45,100,100,-71]],[5,1920,1080]],[15,"sprite_frames_store",4,[3,1,2],[5,4000,400],[100.072,1511.073,0,0,0,0,1,0.3,0.3,1]],[16,"FUTURAMEDIUM",6,[-76],[[9,"Welcome to our game",false,-75,[4],5]],[5,404.45,50.4],[0,466.83,0,0,0,0,1,1,1,1]],[17,"btn_play",6,[-78],[[3,0,-77,[7],8]],[4,4280194067],[5,130,60],[-844.485,453.911,0,0,0,0,1,1,1,1]],[18,"tile_graphic",5,[[32,2,false,-79,[9]],[37,-80]],[0,0,0]],[19,"debug_node",false,5,[[35,"2-3",20,20,1,1,-81,[10]],[38,2,-82,[4,4278190335]]],[5,32.91,29.2]],[20,"nag_screen",512,false,0,4,[[3,0,-83,[119],120],[39,-84]],[5,1080,2500]],[40,"New Node",false,[4],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[8,"camera1",512,4,[[41,1,-10,-85,[4,4292715821]]],[0,0,355.0704155516199,0,0,0,1,1,1,1]],[8,"Main Camera",512,4,[[42,-86,[4,4292715821]]],[0,0,355.0704155516199,0,0,0,1,1,1,1]],[21,"bg",4,[[3,0,-87,[0],1]],[4,4288453788],[5,20000,4000]],[1,"FUTURABOLD",8,[[9,"Welcome to our game",false,-88,[2],3]],[5,439.82,50.4],[0,34.45,0,0,0,0,1,1,1,1]],[2,"grid",6,[[30,2,18,-89]],[5,1000,667],[0,0,0],[-500,-333.5,0,0,0,0,1,1,1,1]],[22,"New Label",9,[[36,"Play",1,1,-90,[6]]],[5,77.81,50.4]],[23,"sample_nodes",4,[5],[447.91,1468.992,0,0,0,0,1,1,1,1]],[1,"zTestPngWithTransparent",3,[[0,-91,[13],14]],[5,600,399],[-6800,0,0,0,0,0,1,1,1,1]],[1,"zTestPngXXX",3,[[0,-92,[15],16]],[5,600,399],[-6200,0,0,0,0,0,1,1,1,1]],[1,"photo (1)",3,[[0,-93,[17],18]],[5,1000,667],[-5400,0,0,0,0,0,1,1,1,1]],[1,"photo (2)",3,[[0,-94,[19],20]],[5,1000,667],[-4400,0,0,0,0,0,1,1,1,1]],[1,"photo (3)",3,[[0,-95,[21],22]],[5,1000,665],[-3400,0,0,0,0,0,1,1,1,1]],[1,"photo (4)",3,[[0,-96,[23],24]],[5,1000,664],[-2400,0,0,0,0,0,1,1,1,1]],[1,"photo (5)",3,[[0,-97,[25],26]],[5,1000,667],[-1400,0,0,0,0,0,1,1,1,1]],[1,"photo (6)",3,[[0,-98,[27],28]],[5,1000,638],[-400,0,0,0,0,0,1,1,1,1]],[1,"photo (7)",3,[[0,-99,[29],30]],[5,1000,667],[600,0,0,0,0,0,1,1,1,1]],[1,"photo (8)",3,[[0,-100,[31],32]],[5,1000,662],[1600,0,0,0,0,0,1,1,1,1]],[1,"photo (9)",3,[[0,-101,[33],34]],[5,1000,723],[2600,0,0,0,0,0,1,1,1,1]],[1,"photo (10)",3,[[0,-102,[35],36]],[5,1000,667],[3600,0,0,0,0,0,1,1,1,1]],[1,"photo (11)",3,[[0,-103,[37],38]],[5,1000,667],[4600,0,0,0,0,0,1,1,1,1]],[1,"photo (12)",3,[[0,-104,[39],40]],[5,1000,616],[5600,0,0,0,0,0,1,1,1,1]],[1,"photo (13)",3,[[0,-105,[41],42]],[5,1000,664],[6600,0,0,0,0,0,1,1,1,1]],[1,"square-tile",1,[[0,-106,[43],44]],[5,340,340],[-4205,-30,0,0,0,0,1,1,1,1]],[1,"flat-square-tile",1,[[0,-107,[45],46]],[5,340,340],[-2000,-200,0,0,0,0,1,1,1,1]],[1,"tile-border-top1",1,[[0,-108,[47],48]],[5,360,360],[-3866,-30,0,0,0,0,1,1,1,1]],[1,"tile-border-top2",1,[[0,-109,[49],50]],[5,360,360],[-3527,-30,0,0,0,0,1,1,1,1]],[1,"tile-border-left1",1,[[0,-110,[51],52]],[5,360,360],[-3187,-29,0,0,0,0,1,1,1,1]],[1,"tile-border-left2",1,[[0,-111,[53],54]],[5,360,360],[-2847,-29.5,0,0,0,0,1,1,1,1]],[1,"tile-border-right1",1,[[0,-112,[55],56]],[5,360,360],[-2507,-30,0,0,0,0,1,1,1,1]],[1,"tile-border-right2",1,[[0,-113,[57],58]],[5,360,360],[-2168,-27.5,0,0,0,0,1,1,1,1]],[1,"tile-border-bottom1",1,[[0,-114,[59],60]],[5,360,360],[-1850,-28.5,0,0,0,0,1,1,1,1]],[1,"tile-border-bottom2",1,[[0,-115,[61],62]],[5,360,360],[-1532.5,-29,0,0,0,0,1,1,1,1]],[1,"tile-corner-top-left",1,[[0,-116,[63],64]],[5,360,360],[-1194,-30,0,0,0,0,1,1,1,1]],[1,"tile-corner-top-right-odd",1,[[0,-117,[65],66]],[5,360,360],[-854,-27,0,0,0,0,1,1,1,1]],[1,"tile-corner-top-right-even",1,[[0,-118,[67],68]],[5,360,360],[-4205,-370,0,0,0,0,1,1,1,1]],[1,"tile-corner-bottom-left-odd",1,[[0,-119,[69],70]],[5,360,360],[-3865,-370,0,0,0,0,1,1,1,1]],[1,"tile-corner-bottom-left-even",1,[[0,-120,[71],72]],[5,360,360],[-3525,-368.5,0,0,0,0,1,1,1,1]],[1,"tile-corner-bottom-right-odd",1,[[0,-121,[73],74]],[5,360,360],[-3185,-370,0,0,0,0,1,1,1,1]],[1,"tile-corner-bottom-right-even",1,[[0,-122,[75],76]],[5,360,360],[-2845,-370,0,0,0,0,1,1,1,1]],[1,"tile-inner1",1,[[0,-123,[77],78]],[5,360,360],[-2505,-367.5,0,0,0,0,1,1,1,1]],[1,"tile-inner2",1,[[0,-124,[79],80]],[5,360,360],[-2167.5,-341,0,0,0,0,1,1,1,1]],[2,"square-tile",2,[[0,-125,[81],82]],[5,340,340],[0,0,0],[-4205,-30,0,0,0,0,1,1,1,1]],[2,"flat-square-tile",2,[[0,-126,[83],84]],[5,340,340],[0,0,0],[-2000,-200,0,0,0,0,1,1,1,1]],[2,"tile-border-top1",2,[[0,-127,[85],86]],[5,360,360],[0,0,0],[-3866,-30,0,0,0,0,1,1,1,1]],[2,"tile-border-top2",2,[[0,-128,[87],88]],[5,360,360],[0,0,0],[-3527,-30,0,0,0,0,1,1,1,1]],[2,"tile-border-left1",2,[[0,-129,[89],90]],[5,360,360],[0,0,0],[-3187,-29,0,0,0,0,1,1,1,1]],[2,"tile-border-left2",2,[[0,-130,[91],92]],[5,360,360],[0,0,0],[-2847,-29.5,0,0,0,0,1,1,1,1]],[2,"tile-border-right1",2,[[0,-131,[93],94]],[5,360,360],[0,0,0],[-2507,-30,0,0,0,0,1,1,1,1]],[2,"tile-border-right2",2,[[0,-132,[95],96]],[5,360,360],[0,0,0],[-2168,-27.5,0,0,0,0,1,1,1,1]],[2,"tile-border-bottom1",2,[[0,-133,[97],98]],[5,360,360],[0,0,0],[-1850,-28.5,0,0,0,0,1,1,1,1]],[2,"tile-border-bottom2",2,[[0,-134,[99],100]],[5,360,360],[0,0,0],[-1532.5,-29,0,0,0,0,1,1,1,1]],[2,"tile-corner-top-left",2,[[0,-135,[101],102]],[5,360,360],[0,0,0],[-1194,-30,0,0,0,0,1,1,1,1]],[2,"tile-corner-top-right-odd",2,[[0,-136,[103],104]],[5,360,360],[0,0,0],[-854,-27,0,0,0,0,1,1,1,1]],[2,"tile-corner-top-right-even",2,[[0,-137,[105],106]],[5,360,360],[0,0,0],[-4205,-370,0,0,0,0,1,1,1,1]],[2,"tile-corner-bottom-left-odd",2,[[0,-138,[107],108]],[5,360,360],[0,0,0],[-3865,-370,0,0,0,0,1,1,1,1]],[2,"tile-corner-bottom-left-even",2,[[0,-139,[109],110]],[5,360,360],[0,0,0],[-3525,-368.5,0,0,0,0,1,1,1,1]],[2,"tile-corner-bottom-right-odd",2,[[0,-140,[111],112]],[5,360,360],[0,0,0],[-3185,-370,0,0,0,0,1,1,1,1]],[2,"tile-corner-bottom-right-even",2,[[0,-141,[113],114]],[5,360,360],[0,0,0],[-2845,-370,0,0,0,0,1,1,1,1]],[2,"tile-inner1",2,[[0,-142,[115],116]],[5,360,360],[0,0,0],[-2505,-367.5,0,0,0,0,1,1,1,1]],[2,"tile-inner2",2,[[0,-143,[117],118]],[5,360,360],[0,0,0],[-2167.5,-341,0,0,0,0,1,1,1,1]]],0,[0,-1,36,0,-2,37,0,-3,38,0,-4,39,0,-5,40,0,-6,41,0,-7,42,0,-8,43,0,-9,44,0,-10,45,0,-11,46,0,-12,47,0,-13,48,0,-14,49,0,-15,50,0,-16,51,0,-17,52,0,-18,53,0,-19,54,0,-1,55,0,-2,56,0,-3,57,0,-4,58,0,-5,59,0,-6,60,0,-7,61,0,-8,62,0,-9,63,0,-10,64,0,-11,65,0,-12,66,0,-13,67,0,-14,68,0,-15,69,0,-16,70,0,-17,71,0,-18,72,0,-19,73,0,0,3,0,-1,21,0,-2,22,0,-3,23,0,-4,24,0,-5,25,0,-6,26,0,-7,27,0,-8,28,0,-9,29,0,-10,30,0,-11,31,0,-12,32,0,-13,33,0,-14,34,0,-15,35,0,0,4,0,0,4,0,0,4,0,-1,14,0,-2,15,0,-3,16,0,-4,6,0,2,4,0,-6,20,0,-7,7,0,-8,12,0,0,5,0,0,5,0,0,5,0,-1,10,0,-2,11,0,0,6,0,-1,8,0,-2,18,0,-3,9,0,0,8,0,-1,17,0,0,9,0,-1,19,0,0,10,0,0,10,0,0,11,0,0,11,0,0,12,0,0,12,0,0,14,0,0,15,0,0,16,0,0,17,0,0,18,0,0,19,0,0,21,0,0,22,0,0,23,0,0,24,0,0,25,0,0,26,0,0,27,0,0,28,0,0,29,0,0,30,0,0,31,0,0,32,0,0,33,0,0,34,0,0,35,0,0,36,0,0,37,0,0,38,0,0,39,0,0,40,0,0,41,0,0,42,0,0,43,0,0,44,0,0,45,0,0,46,0,0,47,0,0,48,0,0,49,0,0,50,0,0,51,0,0,52,0,0,53,0,0,54,0,0,55,0,0,56,0,0,57,0,0,58,0,0,59,0,0,60,0,0,61,0,0,62,0,0,63,0,0,64,0,0,65,0,0,66,0,0,67,0,0,68,0,0,69,0,0,70,0,0,71,0,0,72,0,0,73,0,6,13,1,2,7,2,2,7,3,2,7,4,2,13,5,2,20,143],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,1,-1,4,-1,4,-1,-1,1,-1,-1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,7,8],[0,2,0,3,0,4,0,0,2,27,0,0,2,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,35,0,36,0,37,0,38,0,39,0,40,0,41,0,42,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,12,0,13,0,14,0,15,0,16,0,17,0,18,0,19,0,20,0,21,0,22,0,23,1,5,1,6,1,7,1,8,1,9,1,10,1,11,1,12,1,13,1,14,1,15,1,16,1,17,1,18,1,19,1,20,1,21,1,22,1,23,0,2,3,4]]]]